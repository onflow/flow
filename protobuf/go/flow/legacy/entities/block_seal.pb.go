// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flow/legacy/entities/block_seal.proto

package entities

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BlockSeal struct {
	BlockId                    []byte   `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	ExecutionReceiptId         []byte   `protobuf:"bytes,2,opt,name=execution_receipt_id,json=executionReceiptId,proto3" json:"execution_receipt_id,omitempty"`
	ExecutionReceiptSignatures [][]byte `protobuf:"bytes,3,rep,name=execution_receipt_signatures,json=executionReceiptSignatures,proto3" json:"execution_receipt_signatures,omitempty"`
	ResultApprovalSignatures   [][]byte `protobuf:"bytes,4,rep,name=result_approval_signatures,json=resultApprovalSignatures,proto3" json:"result_approval_signatures,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *BlockSeal) Reset()         { *m = BlockSeal{} }
func (m *BlockSeal) String() string { return proto.CompactTextString(m) }
func (*BlockSeal) ProtoMessage()    {}
func (*BlockSeal) Descriptor() ([]byte, []int) {
	return fileDescriptor_951535fdf2985bf3, []int{0}
}

func (m *BlockSeal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockSeal.Unmarshal(m, b)
}
func (m *BlockSeal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockSeal.Marshal(b, m, deterministic)
}
func (m *BlockSeal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockSeal.Merge(m, src)
}
func (m *BlockSeal) XXX_Size() int {
	return xxx_messageInfo_BlockSeal.Size(m)
}
func (m *BlockSeal) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockSeal.DiscardUnknown(m)
}

var xxx_messageInfo_BlockSeal proto.InternalMessageInfo

func (m *BlockSeal) GetBlockId() []byte {
	if m != nil {
		return m.BlockId
	}
	return nil
}

func (m *BlockSeal) GetExecutionReceiptId() []byte {
	if m != nil {
		return m.ExecutionReceiptId
	}
	return nil
}

func (m *BlockSeal) GetExecutionReceiptSignatures() [][]byte {
	if m != nil {
		return m.ExecutionReceiptSignatures
	}
	return nil
}

func (m *BlockSeal) GetResultApprovalSignatures() [][]byte {
	if m != nil {
		return m.ResultApprovalSignatures
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockSeal)(nil), "entities.BlockSeal")
}

func init() {
	proto.RegisterFile("flow/legacy/entities/block_seal.proto", fileDescriptor_951535fdf2985bf3)
}

var fileDescriptor_951535fdf2985bf3 = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x46, 0xa9, 0x23, 0x3a, 0x86, 0x59, 0x05, 0x17, 0x75, 0x70, 0x31, 0x28, 0x03, 0x5d, 0xa5,
	0x82, 0x5b, 0x17, 0xda, 0x5d, 0xb7, 0xed, 0x03, 0x94, 0x34, 0xbd, 0x2d, 0xc1, 0x90, 0x1b, 0xf2,
	0xe3, 0xcf, 0x9b, 0xfa, 0x38, 0xd2, 0xc4, 0x56, 0x71, 0x96, 0x97, 0x73, 0xce, 0xe2, 0x7e, 0xe4,
	0x38, 0x2a, 0x7c, 0x2f, 0x15, 0x4c, 0x5c, 0x7c, 0x96, 0xa0, 0xbd, 0xf4, 0x12, 0x5c, 0xd9, 0x2b,
	0x14, 0xaf, 0x9d, 0x03, 0xae, 0x98, 0xb1, 0xe8, 0x91, 0x6e, 0x17, 0x74, 0xf7, 0x95, 0x91, 0xab,
	0x6a, 0xc6, 0x2d, 0x70, 0x45, 0x6f, 0xc8, 0x36, 0xb9, 0x72, 0xc8, 0xb3, 0x43, 0x56, 0xec, 0x9a,
	0xcb, 0x78, 0xd7, 0x03, 0x7d, 0x20, 0xd7, 0xf0, 0x01, 0x22, 0x78, 0x89, 0xba, 0xb3, 0x20, 0x40,
	0x1a, 0x3f, 0x6b, 0x67, 0x51, 0xa3, 0x2b, 0x6b, 0x12, 0xaa, 0x07, 0xfa, 0x4c, 0x6e, 0x4f, 0x0b,
	0x27, 0x27, 0xcd, 0x7d, 0xb0, 0xe0, 0xf2, 0xcd, 0x61, 0x53, 0xec, 0x9a, 0xfd, 0xff, 0xb2, 0x5d,
	0x0d, 0xfa, 0x44, 0xf6, 0x16, 0x5c, 0x50, 0xbe, 0xe3, 0xc6, 0x58, 0x7c, 0xe3, 0xea, 0x6f, 0x7f,
	0x1e, 0xfb, 0x3c, 0x19, 0x2f, 0x3f, 0xc2, 0x6f, 0x5d, 0x1d, 0xc9, 0x3d, 0xda, 0x89, 0xa1, 0x9e,
	0x37, 0x49, 0x8f, 0xf7, 0x61, 0x64, 0x69, 0x1c, 0xb6, 0x2c, 0xd0, 0x5f, 0x44, 0xf2, 0xf8, 0x1d,
	0x00, 0x00, 0xff, 0xff, 0xeb, 0x40, 0x54, 0x36, 0x3b, 0x01, 0x00, 0x00,
}
