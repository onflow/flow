// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flow/entities/execution_state.proto

package entities

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExecutionStateQuery struct {
	AgreeingExecutors       uint64   `protobuf:"varint,1,opt,name=agreeing_executors,json=agreeingExecutors,proto3" json:"agreeing_executors,omitempty"`
	RequiredExecutorId      [][]byte `protobuf:"bytes,2,rep,name=required_executor_id,json=requiredExecutorId,proto3" json:"required_executor_id,omitempty"`
	IncludeExecutorMetadata bool     `protobuf:"varint,3,opt,name=include_executor_metadata,json=includeExecutorMetadata,proto3" json:"include_executor_metadata,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *ExecutionStateQuery) Reset()         { *m = ExecutionStateQuery{} }
func (m *ExecutionStateQuery) String() string { return proto.CompactTextString(m) }
func (*ExecutionStateQuery) ProtoMessage()    {}
func (*ExecutionStateQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_43ff30d860a101d2, []int{0}
}

func (m *ExecutionStateQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionStateQuery.Unmarshal(m, b)
}
func (m *ExecutionStateQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionStateQuery.Marshal(b, m, deterministic)
}
func (m *ExecutionStateQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionStateQuery.Merge(m, src)
}
func (m *ExecutionStateQuery) XXX_Size() int {
	return xxx_messageInfo_ExecutionStateQuery.Size(m)
}
func (m *ExecutionStateQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionStateQuery.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionStateQuery proto.InternalMessageInfo

func (m *ExecutionStateQuery) GetAgreeingExecutors() uint64 {
	if m != nil {
		return m.AgreeingExecutors
	}
	return 0
}

func (m *ExecutionStateQuery) GetRequiredExecutorId() [][]byte {
	if m != nil {
		return m.RequiredExecutorId
	}
	return nil
}

func (m *ExecutionStateQuery) GetIncludeExecutorMetadata() bool {
	if m != nil {
		return m.IncludeExecutorMetadata
	}
	return false
}

func init() {
	proto.RegisterType((*ExecutionStateQuery)(nil), "flow.entities.ExecutionStateQuery")
}

func init() {
	proto.RegisterFile("flow/entities/execution_state.proto", fileDescriptor_43ff30d860a101d2)
}

var fileDescriptor_43ff30d860a101d2 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0xd0, 0x31, 0x4b, 0x04, 0x31,
	0x10, 0x05, 0x60, 0xd6, 0x13, 0x91, 0xa0, 0x85, 0x51, 0x70, 0x05, 0x8b, 0x45, 0x9b, 0x6d, 0xdc,
	0x1c, 0xd8, 0x59, 0x0a, 0x57, 0x58, 0x08, 0xba, 0x76, 0x36, 0x4b, 0x76, 0x33, 0x17, 0x07, 0xee,
	0x32, 0x9a, 0x9d, 0xa0, 0xfe, 0x2d, 0x7f, 0xa1, 0x5c, 0xee, 0x66, 0xc5, 0x26, 0xcd, 0xfb, 0x5e,
	0xe0, 0x8d, 0xba, 0x5e, 0xae, 0xe8, 0xd3, 0x40, 0x60, 0x64, 0x84, 0xd1, 0xc0, 0x17, 0x0c, 0x89,
	0x91, 0x42, 0x37, 0xb2, 0x65, 0x68, 0xde, 0x23, 0x31, 0xe9, 0xe3, 0x0d, 0x6a, 0x04, 0x5d, 0xfd,
	0x14, 0xea, 0x74, 0x21, 0xf0, 0x65, 0xe3, 0x9e, 0x13, 0xc4, 0x6f, 0x7d, 0xa3, 0xb4, 0xf5, 0x11,
	0x00, 0x83, 0xef, 0xb6, 0x1f, 0x51, 0x1c, 0xcb, 0xa2, 0x2a, 0xea, 0xfd, 0xf6, 0x44, 0x92, 0x85,
	0x04, 0x7a, 0xae, 0xce, 0x22, 0x7c, 0x24, 0x8c, 0xe0, 0x26, 0xde, 0xa1, 0x2b, 0xf7, 0xaa, 0x59,
	0x7d, 0xd4, 0x6a, 0xc9, 0xa4, 0xf0, 0xe0, 0xf4, 0x9d, 0xba, 0xc0, 0x30, 0xac, 0x92, 0x83, 0xbf,
	0xc2, 0x1a, 0xd8, 0x3a, 0xcb, 0xb6, 0x9c, 0x55, 0x45, 0x7d, 0xd8, 0x9e, 0xef, 0x80, 0xb4, 0x1e,
	0x77, 0xf1, 0xfd, 0x93, 0xba, 0xa4, 0xe8, 0x1b, 0x0a, 0x79, 0x4b, 0xde, 0xd5, 0xa7, 0xe5, 0x34,
	0xea, 0x75, 0xee, 0x91, 0xdf, 0x52, 0xdf, 0x0c, 0xb4, 0x36, 0x5b, 0x64, 0xf2, 0x23, 0xd2, 0x78,
	0x32, 0xff, 0x6e, 0xd5, 0x1f, 0xe4, 0xe8, 0xf6, 0x37, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xab, 0xe8,
	0x99, 0x43, 0x01, 0x00, 0x00,
}
