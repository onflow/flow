// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flow/entities/node_version_info.proto

package entities

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CompatibleRange struct {
	// The first block that the version supports.
	StartHeight uint64 `protobuf:"varint,1,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	// The last block that the version supports.
	EndHeight            uint64   `protobuf:"varint,2,opt,name=end_height,json=endHeight,proto3" json:"end_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompatibleRange) Reset()         { *m = CompatibleRange{} }
func (m *CompatibleRange) String() string { return proto.CompactTextString(m) }
func (*CompatibleRange) ProtoMessage()    {}
func (*CompatibleRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff9e447351cb4a8a, []int{0}
}

func (m *CompatibleRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompatibleRange.Unmarshal(m, b)
}
func (m *CompatibleRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompatibleRange.Marshal(b, m, deterministic)
}
func (m *CompatibleRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompatibleRange.Merge(m, src)
}
func (m *CompatibleRange) XXX_Size() int {
	return xxx_messageInfo_CompatibleRange.Size(m)
}
func (m *CompatibleRange) XXX_DiscardUnknown() {
	xxx_messageInfo_CompatibleRange.DiscardUnknown(m)
}

var xxx_messageInfo_CompatibleRange proto.InternalMessageInfo

func (m *CompatibleRange) GetStartHeight() uint64 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *CompatibleRange) GetEndHeight() uint64 {
	if m != nil {
		return m.EndHeight
	}
	return 0
}

type NodeVersionInfo struct {
	// The currently running node software version.
	Semver string `protobuf:"bytes,1,opt,name=semver,proto3" json:"semver,omitempty"`
	// The git commit hash of the currently running node software.
	Commit string `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	// The unique identifier for the node's network within the current spork.
	SporkId []byte `protobuf:"bytes,3,opt,name=spork_id,json=sporkId,proto3" json:"spork_id,omitempty"`
	// The protocol version of the currently running node software.
	ProtocolVersion uint64 `protobuf:"varint,4,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	// The spork root block height. This is the height of the first sealed block in the spork network.
	SporkRootBlockHeight uint64 `protobuf:"varint,5,opt,name=spork_root_block_height,json=sporkRootBlockHeight,proto3" json:"spork_root_block_height,omitempty"`
	// The node's root block height. This is the first sealed block in the node's protocol database.
	// If the node started at the beginning of the spork, it is the same as the spork root block height.
	// If the node started after the beginning of the spork, it is the height of the first sealed block
	// indexed.
	NodeRootBlockHeight uint64 `protobuf:"varint,6,opt,name=node_root_block_height,json=nodeRootBlockHeight,proto3" json:"node_root_block_height,omitempty"`
	// The compatible version range.
	CompatibleRange      *CompatibleRange `protobuf:"bytes,7,opt,name=compatible_range,json=compatibleRange,proto3" json:"compatible_range,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NodeVersionInfo) Reset()         { *m = NodeVersionInfo{} }
func (m *NodeVersionInfo) String() string { return proto.CompactTextString(m) }
func (*NodeVersionInfo) ProtoMessage()    {}
func (*NodeVersionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff9e447351cb4a8a, []int{1}
}

func (m *NodeVersionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeVersionInfo.Unmarshal(m, b)
}
func (m *NodeVersionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeVersionInfo.Marshal(b, m, deterministic)
}
func (m *NodeVersionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeVersionInfo.Merge(m, src)
}
func (m *NodeVersionInfo) XXX_Size() int {
	return xxx_messageInfo_NodeVersionInfo.Size(m)
}
func (m *NodeVersionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeVersionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeVersionInfo proto.InternalMessageInfo

func (m *NodeVersionInfo) GetSemver() string {
	if m != nil {
		return m.Semver
	}
	return ""
}

func (m *NodeVersionInfo) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *NodeVersionInfo) GetSporkId() []byte {
	if m != nil {
		return m.SporkId
	}
	return nil
}

func (m *NodeVersionInfo) GetProtocolVersion() uint64 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *NodeVersionInfo) GetSporkRootBlockHeight() uint64 {
	if m != nil {
		return m.SporkRootBlockHeight
	}
	return 0
}

func (m *NodeVersionInfo) GetNodeRootBlockHeight() uint64 {
	if m != nil {
		return m.NodeRootBlockHeight
	}
	return 0
}

func (m *NodeVersionInfo) GetCompatibleRange() *CompatibleRange {
	if m != nil {
		return m.CompatibleRange
	}
	return nil
}

func init() {
	proto.RegisterType((*CompatibleRange)(nil), "flow.entities.CompatibleRange")
	proto.RegisterType((*NodeVersionInfo)(nil), "flow.entities.NodeVersionInfo")
}

func init() {
	proto.RegisterFile("flow/entities/node_version_info.proto", fileDescriptor_ff9e447351cb4a8a)
}

var fileDescriptor_ff9e447351cb4a8a = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x26, 0xb5, 0xb6, 0x76, 0x5a, 0x49, 0x59, 0xa5, 0x46, 0x50, 0xa9, 0x05, 0xa1, 0x5e, 0x12,
	0xb1, 0xf8, 0x02, 0xf5, 0x62, 0x2f, 0x22, 0x2b, 0x78, 0xf0, 0x12, 0x9a, 0x64, 0x93, 0x2e, 0x4d,
	0x76, 0xca, 0x66, 0x5b, 0xdf, 0xce, 0x67, 0x93, 0x4c, 0xb2, 0x85, 0xd6, 0x4b, 0x60, 0xbe, 0x9f,
	0xd9, 0xf9, 0x3e, 0x02, 0x0f, 0x69, 0x8e, 0x3f, 0x81, 0x50, 0x46, 0x1a, 0x29, 0xca, 0x40, 0x61,
	0x22, 0xc2, 0x9d, 0xd0, 0xa5, 0x44, 0x15, 0x4a, 0x95, 0xa2, 0xbf, 0xd1, 0x68, 0x90, 0x9d, 0x57,
	0x32, 0xdf, 0xca, 0x26, 0x9f, 0xe0, 0xbe, 0x62, 0xb1, 0x59, 0x1a, 0x19, 0xe5, 0x82, 0x2f, 0x55,
	0x26, 0xd8, 0x3d, 0x0c, 0x4a, 0xb3, 0xd4, 0x26, 0x5c, 0x09, 0x99, 0xad, 0x8c, 0xe7, 0x8c, 0x9d,
	0x69, 0x9b, 0xf7, 0x09, 0x7b, 0x23, 0x88, 0xdd, 0x02, 0x08, 0x95, 0x58, 0x41, 0x8b, 0x04, 0x3d,
	0xa1, 0x92, 0x9a, 0x9e, 0xfc, 0xb6, 0xc0, 0x7d, 0xc7, 0x44, 0x7c, 0xd5, 0xcf, 0x2f, 0x54, 0x8a,
	0x6c, 0x04, 0x9d, 0x52, 0x14, 0x3b, 0xa1, 0x69, 0x5f, 0x8f, 0x37, 0x53, 0x85, 0xc7, 0x58, 0x14,
	0xb2, 0x5e, 0xd3, 0xe3, 0xcd, 0xc4, 0xae, 0xe1, 0xac, 0xdc, 0xa0, 0x5e, 0x87, 0x32, 0xf1, 0x4e,
	0xc6, 0xce, 0x74, 0xc0, 0xbb, 0x34, 0x2f, 0x12, 0xf6, 0x08, 0x43, 0xca, 0x12, 0x63, 0x6e, 0x13,
	0x7a, 0x6d, 0xba, 0xc1, 0xb5, 0x78, 0xf3, 0x32, 0x7b, 0x81, 0xab, 0x7a, 0x8b, 0x46, 0x34, 0x61,
	0x94, 0x63, 0xbc, 0xb6, 0x57, 0x9f, 0x92, 0xe3, 0x92, 0x68, 0x8e, 0x68, 0xe6, 0x15, 0xd9, 0xe4,
	0x9b, 0xc1, 0x88, 0xfa, 0xfb, 0xef, 0xea, 0x90, 0xeb, 0xa2, 0x62, 0x8f, 0x4d, 0x0b, 0x18, 0xc6,
	0xfb, 0x2a, 0x43, 0x5d, 0x75, 0xe9, 0x75, 0xc7, 0xce, 0xb4, 0xff, 0x7c, 0xe7, 0x1f, 0x94, 0xee,
	0x1f, 0x35, 0xce, 0xdd, 0xf8, 0x10, 0x98, 0x7f, 0xc0, 0x0d, 0xea, 0xcc, 0x47, 0x45, 0x3e, 0x0a,
	0x15, 0x6d, 0xd3, 0xfd, 0x82, 0xef, 0xa7, 0x4c, 0x9a, 0xd5, 0x36, 0xf2, 0x63, 0x2c, 0x82, 0x5a,
	0x14, 0xd0, 0xc7, 0x2a, 0x83, 0x0c, 0x83, 0x83, 0xdf, 0x21, 0xea, 0x10, 0x35, 0xfb, 0x0b, 0x00,
	0x00, 0xff, 0xff, 0xf6, 0x11, 0xfd, 0x6f, 0x26, 0x02, 0x00, 0x00,
}
