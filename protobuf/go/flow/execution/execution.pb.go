// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: flow/execution/execution.proto

package execution

import (
	entities "github.com/onflow/flow/protobuf/go/flow/entities"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{0}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{1}
}

type GetAccountAtBlockIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId []byte `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Address []byte `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAccountAtBlockIDRequest) Reset() {
	*x = GetAccountAtBlockIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountAtBlockIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountAtBlockIDRequest) ProtoMessage() {}

func (x *GetAccountAtBlockIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountAtBlockIDRequest.ProtoReflect.Descriptor instead.
func (*GetAccountAtBlockIDRequest) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{2}
}

func (x *GetAccountAtBlockIDRequest) GetBlockId() []byte {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *GetAccountAtBlockIDRequest) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type GetAccountAtBlockIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *entities.Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetAccountAtBlockIDResponse) Reset() {
	*x = GetAccountAtBlockIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountAtBlockIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountAtBlockIDResponse) ProtoMessage() {}

func (x *GetAccountAtBlockIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountAtBlockIDResponse.ProtoReflect.Descriptor instead.
func (*GetAccountAtBlockIDResponse) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{3}
}

func (x *GetAccountAtBlockIDResponse) GetAccount() *entities.Account {
	if x != nil {
		return x.Account
	}
	return nil
}

type ExecuteScriptAtBlockIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId   []byte   `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Script    []byte   `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	Arguments [][]byte `protobuf:"bytes,3,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *ExecuteScriptAtBlockIDRequest) Reset() {
	*x = ExecuteScriptAtBlockIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteScriptAtBlockIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScriptAtBlockIDRequest) ProtoMessage() {}

func (x *ExecuteScriptAtBlockIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteScriptAtBlockIDRequest.ProtoReflect.Descriptor instead.
func (*ExecuteScriptAtBlockIDRequest) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{4}
}

func (x *ExecuteScriptAtBlockIDRequest) GetBlockId() []byte {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *ExecuteScriptAtBlockIDRequest) GetScript() []byte {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *ExecuteScriptAtBlockIDRequest) GetArguments() [][]byte {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type ExecuteScriptAtBlockIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExecuteScriptAtBlockIDResponse) Reset() {
	*x = ExecuteScriptAtBlockIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteScriptAtBlockIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScriptAtBlockIDResponse) ProtoMessage() {}

func (x *ExecuteScriptAtBlockIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteScriptAtBlockIDResponse.ProtoReflect.Descriptor instead.
func (*ExecuteScriptAtBlockIDResponse) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{5}
}

func (x *ExecuteScriptAtBlockIDResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type GetEventsForBlockIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*GetEventsForBlockIDsResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *GetEventsForBlockIDsResponse) Reset() {
	*x = GetEventsForBlockIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsForBlockIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsForBlockIDsResponse) ProtoMessage() {}

func (x *GetEventsForBlockIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsForBlockIDsResponse.ProtoReflect.Descriptor instead.
func (*GetEventsForBlockIDsResponse) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{6}
}

func (x *GetEventsForBlockIDsResponse) GetResults() []*GetEventsForBlockIDsResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetEventsForBlockIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	BlockIds [][]byte `protobuf:"bytes,2,rep,name=block_ids,json=blockIds,proto3" json:"block_ids,omitempty"`
}

func (x *GetEventsForBlockIDsRequest) Reset() {
	*x = GetEventsForBlockIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsForBlockIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsForBlockIDsRequest) ProtoMessage() {}

func (x *GetEventsForBlockIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsForBlockIDsRequest.ProtoReflect.Descriptor instead.
func (*GetEventsForBlockIDsRequest) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{7}
}

func (x *GetEventsForBlockIDsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetEventsForBlockIDsRequest) GetBlockIds() [][]byte {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

type GetTransactionResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId       []byte `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	TransactionId []byte `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *GetTransactionResultRequest) Reset() {
	*x = GetTransactionResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResultRequest) ProtoMessage() {}

func (x *GetTransactionResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResultRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionResultRequest) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{8}
}

func (x *GetTransactionResultRequest) GetBlockId() []byte {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *GetTransactionResultRequest) GetTransactionId() []byte {
	if x != nil {
		return x.TransactionId
	}
	return nil
}

type GetTransactionByIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId []byte `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Index   uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *GetTransactionByIndexRequest) Reset() {
	*x = GetTransactionByIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionByIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionByIndexRequest) ProtoMessage() {}

func (x *GetTransactionByIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionByIndexRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionByIndexRequest) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{9}
}

func (x *GetTransactionByIndexRequest) GetBlockId() []byte {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *GetTransactionByIndexRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type GetTransactionResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode   uint32            `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	ErrorMessage string            `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Events       []*entities.Event `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetTransactionResultResponse) Reset() {
	*x = GetTransactionResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResultResponse) ProtoMessage() {}

func (x *GetTransactionResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResultResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionResultResponse) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{10}
}

func (x *GetTransactionResultResponse) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetTransactionResultResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetTransactionResultResponse) GetEvents() []*entities.Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetTransactionsByBlockIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId []byte `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
}

func (x *GetTransactionsByBlockIDRequest) Reset() {
	*x = GetTransactionsByBlockIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsByBlockIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsByBlockIDRequest) ProtoMessage() {}

func (x *GetTransactionsByBlockIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsByBlockIDRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionsByBlockIDRequest) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{11}
}

func (x *GetTransactionsByBlockIDRequest) GetBlockId() []byte {
	if x != nil {
		return x.BlockId
	}
	return nil
}

type GetTransactionResultsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionResults []*GetTransactionResultResponse `protobuf:"bytes,1,rep,name=transaction_results,json=transactionResults,proto3" json:"transaction_results,omitempty"`
}

func (x *GetTransactionResultsResponse) Reset() {
	*x = GetTransactionResultsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResultsResponse) ProtoMessage() {}

func (x *GetTransactionResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResultsResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionResultsResponse) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{12}
}

func (x *GetTransactionResultsResponse) GetTransactionResults() []*GetTransactionResultResponse {
	if x != nil {
		return x.TransactionResults
	}
	return nil
}

type GetRegisterAtBlockIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId       []byte `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	RegisterOwner []byte `protobuf:"bytes,2,opt,name=register_owner,json=registerOwner,proto3" json:"register_owner,omitempty"`
	// bytes register_controller = 3; @deprecated
	RegisterKey []byte `protobuf:"bytes,4,opt,name=register_key,json=registerKey,proto3" json:"register_key,omitempty"`
}

func (x *GetRegisterAtBlockIDRequest) Reset() {
	*x = GetRegisterAtBlockIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegisterAtBlockIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisterAtBlockIDRequest) ProtoMessage() {}

func (x *GetRegisterAtBlockIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisterAtBlockIDRequest.ProtoReflect.Descriptor instead.
func (*GetRegisterAtBlockIDRequest) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{13}
}

func (x *GetRegisterAtBlockIDRequest) GetBlockId() []byte {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *GetRegisterAtBlockIDRequest) GetRegisterOwner() []byte {
	if x != nil {
		return x.RegisterOwner
	}
	return nil
}

func (x *GetRegisterAtBlockIDRequest) GetRegisterKey() []byte {
	if x != nil {
		return x.RegisterKey
	}
	return nil
}

type GetRegisterAtBlockIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetRegisterAtBlockIDResponse) Reset() {
	*x = GetRegisterAtBlockIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegisterAtBlockIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisterAtBlockIDResponse) ProtoMessage() {}

func (x *GetRegisterAtBlockIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisterAtBlockIDResponse.ProtoReflect.Descriptor instead.
func (*GetRegisterAtBlockIDResponse) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{14}
}

func (x *GetRegisterAtBlockIDResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type GetLatestBlockHeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSealed bool `protobuf:"varint,1,opt,name=is_sealed,json=isSealed,proto3" json:"is_sealed,omitempty"`
}

func (x *GetLatestBlockHeaderRequest) Reset() {
	*x = GetLatestBlockHeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestBlockHeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestBlockHeaderRequest) ProtoMessage() {}

func (x *GetLatestBlockHeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestBlockHeaderRequest.ProtoReflect.Descriptor instead.
func (*GetLatestBlockHeaderRequest) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{15}
}

func (x *GetLatestBlockHeaderRequest) GetIsSealed() bool {
	if x != nil {
		return x.IsSealed
	}
	return false
}

type GetBlockHeaderByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBlockHeaderByIDRequest) Reset() {
	*x = GetBlockHeaderByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockHeaderByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHeaderByIDRequest) ProtoMessage() {}

func (x *GetBlockHeaderByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHeaderByIDRequest.ProtoReflect.Descriptor instead.
func (*GetBlockHeaderByIDRequest) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{16}
}

func (x *GetBlockHeaderByIDRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type BlockHeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *entities.BlockHeader `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *BlockHeaderResponse) Reset() {
	*x = BlockHeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeaderResponse) ProtoMessage() {}

func (x *BlockHeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeaderResponse.ProtoReflect.Descriptor instead.
func (*BlockHeaderResponse) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{17}
}

func (x *BlockHeaderResponse) GetBlock() *entities.BlockHeader {
	if x != nil {
		return x.Block
	}
	return nil
}

type GetEventsForBlockIDsResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId     []byte            `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	BlockHeight uint64            `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Events      []*entities.Event `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetEventsForBlockIDsResponse_Result) Reset() {
	*x = GetEventsForBlockIDsResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flow_execution_execution_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsForBlockIDsResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsForBlockIDsResponse_Result) ProtoMessage() {}

func (x *GetEventsForBlockIDsResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_flow_execution_execution_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsForBlockIDsResponse_Result.ProtoReflect.Descriptor instead.
func (*GetEventsForBlockIDsResponse_Result) Descriptor() ([]byte, []int) {
	return file_flow_execution_execution_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GetEventsForBlockIDsResponse_Result) GetBlockId() []byte {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *GetEventsForBlockIDsResponse_Result) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *GetEventsForBlockIDsResponse_Result) GetEvents() []*entities.Event {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_flow_execution_execution_proto protoreflect.FileDescriptor

var file_flow_execution_execution_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x1b, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x66,
	0x6c, 0x6f, 0x77, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x66, 0x6c, 0x6f, 0x77,
	0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4f, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x70,
	0x0a, 0x1d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x41,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x36, 0x0a, 0x1e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x74, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x2c, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4e,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x22, 0x5f,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x4f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x92, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3c, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22, 0x34,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x65, 0x61, 0x6c, 0x65, 0x64,
	0x22, 0x2b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a,
	0x13, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x32, 0xe1, 0x08, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x41, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12,
	0x1b, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x44, 0x12, 0x2a, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x16, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x41, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x44, 0x12, 0x2d, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x46, 0x6f, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x73, 0x12, 0x2b, 0x2e, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2b,
	0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x42, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x79,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x2f, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x12,
	0x2b, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x2b, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x52, 0x0a, 0x1d, 0x6f, 0x72,
	0x67, 0x2e, 0x6f, 0x6e, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x31, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6e, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x66,
	0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2f,
	0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flow_execution_execution_proto_rawDescOnce sync.Once
	file_flow_execution_execution_proto_rawDescData = file_flow_execution_execution_proto_rawDesc
)

func file_flow_execution_execution_proto_rawDescGZIP() []byte {
	file_flow_execution_execution_proto_rawDescOnce.Do(func() {
		file_flow_execution_execution_proto_rawDescData = protoimpl.X.CompressGZIP(file_flow_execution_execution_proto_rawDescData)
	})
	return file_flow_execution_execution_proto_rawDescData
}

var file_flow_execution_execution_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_flow_execution_execution_proto_goTypes = []interface{}{
	(*PingRequest)(nil),                         // 0: flow.execution.PingRequest
	(*PingResponse)(nil),                        // 1: flow.execution.PingResponse
	(*GetAccountAtBlockIDRequest)(nil),          // 2: flow.execution.GetAccountAtBlockIDRequest
	(*GetAccountAtBlockIDResponse)(nil),         // 3: flow.execution.GetAccountAtBlockIDResponse
	(*ExecuteScriptAtBlockIDRequest)(nil),       // 4: flow.execution.ExecuteScriptAtBlockIDRequest
	(*ExecuteScriptAtBlockIDResponse)(nil),      // 5: flow.execution.ExecuteScriptAtBlockIDResponse
	(*GetEventsForBlockIDsResponse)(nil),        // 6: flow.execution.GetEventsForBlockIDsResponse
	(*GetEventsForBlockIDsRequest)(nil),         // 7: flow.execution.GetEventsForBlockIDsRequest
	(*GetTransactionResultRequest)(nil),         // 8: flow.execution.GetTransactionResultRequest
	(*GetTransactionByIndexRequest)(nil),        // 9: flow.execution.GetTransactionByIndexRequest
	(*GetTransactionResultResponse)(nil),        // 10: flow.execution.GetTransactionResultResponse
	(*GetTransactionsByBlockIDRequest)(nil),     // 11: flow.execution.GetTransactionsByBlockIDRequest
	(*GetTransactionResultsResponse)(nil),       // 12: flow.execution.GetTransactionResultsResponse
	(*GetRegisterAtBlockIDRequest)(nil),         // 13: flow.execution.GetRegisterAtBlockIDRequest
	(*GetRegisterAtBlockIDResponse)(nil),        // 14: flow.execution.GetRegisterAtBlockIDResponse
	(*GetLatestBlockHeaderRequest)(nil),         // 15: flow.execution.GetLatestBlockHeaderRequest
	(*GetBlockHeaderByIDRequest)(nil),           // 16: flow.execution.GetBlockHeaderByIDRequest
	(*BlockHeaderResponse)(nil),                 // 17: flow.execution.BlockHeaderResponse
	(*GetEventsForBlockIDsResponse_Result)(nil), // 18: flow.execution.GetEventsForBlockIDsResponse.Result
	(*entities.Account)(nil),                    // 19: flow.entities.Account
	(*entities.Event)(nil),                      // 20: flow.entities.Event
	(*entities.BlockHeader)(nil),                // 21: flow.entities.BlockHeader
}
var file_flow_execution_execution_proto_depIdxs = []int32{
	19, // 0: flow.execution.GetAccountAtBlockIDResponse.account:type_name -> flow.entities.Account
	18, // 1: flow.execution.GetEventsForBlockIDsResponse.results:type_name -> flow.execution.GetEventsForBlockIDsResponse.Result
	20, // 2: flow.execution.GetTransactionResultResponse.events:type_name -> flow.entities.Event
	10, // 3: flow.execution.GetTransactionResultsResponse.transaction_results:type_name -> flow.execution.GetTransactionResultResponse
	21, // 4: flow.execution.BlockHeaderResponse.block:type_name -> flow.entities.BlockHeader
	20, // 5: flow.execution.GetEventsForBlockIDsResponse.Result.events:type_name -> flow.entities.Event
	0,  // 6: flow.execution.ExecutionAPI.Ping:input_type -> flow.execution.PingRequest
	2,  // 7: flow.execution.ExecutionAPI.GetAccountAtBlockID:input_type -> flow.execution.GetAccountAtBlockIDRequest
	4,  // 8: flow.execution.ExecutionAPI.ExecuteScriptAtBlockID:input_type -> flow.execution.ExecuteScriptAtBlockIDRequest
	7,  // 9: flow.execution.ExecutionAPI.GetEventsForBlockIDs:input_type -> flow.execution.GetEventsForBlockIDsRequest
	8,  // 10: flow.execution.ExecutionAPI.GetTransactionResult:input_type -> flow.execution.GetTransactionResultRequest
	9,  // 11: flow.execution.ExecutionAPI.GetTransactionResultByIndex:input_type -> flow.execution.GetTransactionByIndexRequest
	11, // 12: flow.execution.ExecutionAPI.GetTransactionResultsByBlockID:input_type -> flow.execution.GetTransactionsByBlockIDRequest
	13, // 13: flow.execution.ExecutionAPI.GetRegisterAtBlockID:input_type -> flow.execution.GetRegisterAtBlockIDRequest
	15, // 14: flow.execution.ExecutionAPI.GetLatestBlockHeader:input_type -> flow.execution.GetLatestBlockHeaderRequest
	16, // 15: flow.execution.ExecutionAPI.GetBlockHeaderByID:input_type -> flow.execution.GetBlockHeaderByIDRequest
	1,  // 16: flow.execution.ExecutionAPI.Ping:output_type -> flow.execution.PingResponse
	3,  // 17: flow.execution.ExecutionAPI.GetAccountAtBlockID:output_type -> flow.execution.GetAccountAtBlockIDResponse
	5,  // 18: flow.execution.ExecutionAPI.ExecuteScriptAtBlockID:output_type -> flow.execution.ExecuteScriptAtBlockIDResponse
	6,  // 19: flow.execution.ExecutionAPI.GetEventsForBlockIDs:output_type -> flow.execution.GetEventsForBlockIDsResponse
	10, // 20: flow.execution.ExecutionAPI.GetTransactionResult:output_type -> flow.execution.GetTransactionResultResponse
	10, // 21: flow.execution.ExecutionAPI.GetTransactionResultByIndex:output_type -> flow.execution.GetTransactionResultResponse
	12, // 22: flow.execution.ExecutionAPI.GetTransactionResultsByBlockID:output_type -> flow.execution.GetTransactionResultsResponse
	14, // 23: flow.execution.ExecutionAPI.GetRegisterAtBlockID:output_type -> flow.execution.GetRegisterAtBlockIDResponse
	17, // 24: flow.execution.ExecutionAPI.GetLatestBlockHeader:output_type -> flow.execution.BlockHeaderResponse
	17, // 25: flow.execution.ExecutionAPI.GetBlockHeaderByID:output_type -> flow.execution.BlockHeaderResponse
	16, // [16:26] is the sub-list for method output_type
	6,  // [6:16] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_flow_execution_execution_proto_init() }
func file_flow_execution_execution_proto_init() {
	if File_flow_execution_execution_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flow_execution_execution_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountAtBlockIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountAtBlockIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteScriptAtBlockIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteScriptAtBlockIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsForBlockIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsForBlockIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionByIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsByBlockIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionResultsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegisterAtBlockIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegisterAtBlockIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestBlockHeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockHeaderByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flow_execution_execution_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsForBlockIDsResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flow_execution_execution_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flow_execution_execution_proto_goTypes,
		DependencyIndexes: file_flow_execution_execution_proto_depIdxs,
		MessageInfos:      file_flow_execution_execution_proto_msgTypes,
	}.Build()
	File_flow_execution_execution_proto = out.File
	file_flow_execution_execution_proto_rawDesc = nil
	file_flow_execution_execution_proto_goTypes = nil
	file_flow_execution_execution_proto_depIdxs = nil
}
