openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Access API"
servers:
  - url: https://access.mainnet.nodes.onflow.org/v1
    description: Current Mainnet
  - url: https://access.devnet.nodes.onflow.org/v1
    description: Testnet
  - url: https://access.canary.nodes.onflow.org/v1
    description: Canarynet
paths:
  /blocks:
    get:
      summary: Gets full blocks by height.
      tags:
        - Blocks
      parameters: 
        - description: A comma-separated list of block heights to get.
          name: height
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/BlockHeight'
            minItems: 1
            uniqueItems: true
          explode: false
          style: form
        - name: start_height
          in: query
          schema:
            $ref: '#/components/schemas/BlockHeight'
          required: false
          description: The start height of the block range to get. Must be used together with `end_height`. This parameter is incompatible with `height`.
        - name: end_height
          in: query
          schema:
            $ref: '#/components/schemas/BlockHeight'
          required: false
          description: The ending height of the block range to get. Must be used together with `start_height`. This parameter is incompatible with `height`.
        - $ref: '#/components/parameters/expandParam'
        - $ref: '#/components/parameters/selectParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Block'
        400:
          $ref: '#/components/responses/400BadRequest'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /blocks/{id}:
    get:
      summary: Gets full blocks by ID.
      tags:
        - Blocks
      parameters:
        - description: A comma-separated list of block IDs to get.
          name: id
          in: path
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Identifier'
            minItems: 1
            maxItems: 50
            uniqueItems: true
          explode: true
          required: true
        - $ref: '#/components/parameters/expandParam'
        - $ref: '#/components/parameters/selectParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Block'
        400:
          $ref: '#/components/responses/400BadRequest'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /transactions/{id}:
    get:
      summary: Gets a transaction by ID.
      tags:
        - Transactions
      parameters:
        - description: The ID of the transaction to get.
          name: id
          in: path
          schema:
            $ref: '#/components/schemas/Identifier'
          required: true
        - $ref: '#/components/parameters/expandParam'
        - $ref: '#/components/parameters/selectParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        400:
          $ref: '#/components/responses/400BadRequest'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /transaction_results/{transaction_id}:
    get:
      summary: Gets a transaction result by ID.
      tags:
        - Transactions
      parameters:
        - description: The transaction ID of the transaction result to get.
          name: transaction_id
          in: path
          schema:
            $ref: '#/components/schemas/Identifier'
          required: true
        - $ref: '#/components/parameters/expandParam'
        - $ref: '#/components/parameters/selectParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResult'
        400:
          $ref: '#/components/responses/400BadRequest'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /transactions:
    post:
      summary: Submits a transaction to the network.
      tags:
        - Transactions
      requestBody:
        description: The transaction to submit.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - script
                - arguments
                - reference_block_id
                - gas_limit
                - payer
                - proposal_key
                - authorizers
                - payload_signatures
                - envelope_signatures
              properties:
                script:
                  type: string
                  format: byte
                arguments:
                  type: array
                  items:
                    type: string
                    format: byte
                reference_block_id:
                  $ref: '#/components/schemas/Identifier'
                gas_limit:
                  type: string
                  format: uint64
                payer:
                  $ref: '#/components/schemas/Address'
                proposal_key:
                  $ref: '#/components/schemas/ProposalKey'
                authorizers:
                  type: array
                  items:
                    $ref: '#/components/schemas/Address'
                payload_signatures:
                  type: array
                  items:
                    $ref: '#/components/schemas/TransactionSignature'
                envelope_signatures:
                  type: array
                  items:
                    $ref: '#/components/schemas/TransactionSignature'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: The URI to the newly submitted transaction.
        400:
          $ref: '#/components/responses/400BadRequest'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /collections/{id}:
    get:
      summary: Gets a collection by ID.
      tags:
        - Collections
      parameters:
        - name: id
          in: path
          schema:
            $ref: '#/components/schemas/Identifier'
          required: true
          description: The ID of the collection to get.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        400:
          $ref: '#/components/responses/400BadRequest'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /execution_results:
    get:
      summary: Gets execution results by block ID.
      tags:
        - Execution Results
      parameters:
        - description: A comma-separated list of block IDs to get the execution results for.
          name: block_id
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Identifier'
            minItems: 1
            uniqueItems: true
          explode: false
          style: form
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExecutionResult'
        400:
          $ref: '#/components/responses/400BadRequest'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /execution_results/{id}:
    get: 
      summary: Gets an execution result by ID.
      tags:
        - Execution Results
      parameters:
        - name: id
          in: path
          schema:
            $ref: '#/components/schemas/Identifier'
          required: true
          description: The ID of the execution result to get.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionResult'
        400:
          $ref: '#/components/responses/400BadRequest'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /accounts/{address}:
    get:
      summary: Gets an account by address at the given block height.
      tags:
        - Accounts
      parameters:
        - name: address
          in: path
          schema:
            $ref: '#/components/schemas/Address'
          required: true
          description: The address of the account to get.
        - name: block_height
          in: query
          schema:
            $ref: '#/components/schemas/BlockHeight'
          required: true
          description: The block height to query for the account details at.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          $ref: '#/components/responses/400BadRequest'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'
  /scripts:
    post:
      summary: Executes a read-only Cadence script against the execution state at the given block height or ID. If block height or ID is not specified, then the script is executed at the latest sealed block height.
      tags:
        - Scripts
      parameters:
        - description: The ID of the block to execute the script against. For a specific block height, use `block_height` instead.
          name: block_id
          in: query
          schema:
            $ref: '#/components/schemas/Identifier'
          required: false
        - description: The height of the block to execute the script against. This parameter is incompatible with `block_id`.
          name: block_height
          in: query
          schema:
            $ref: '#/components/schemas/BlockHeight'
          required: false
      requestBody:
        description: The script to execute.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                script:
                  type: string
                  format: byte
                arguments:
                  type: array
                  items:
                    type: string
                    format: byte
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: string
                    format: byte
        400:
          $ref: '#/components/responses/400BadRequest'
        500:
          $ref: '#/components/responses/500InternalServerError'
components:
  parameters:
    expandParam:
        description: A comma-separated list indicating which properties of the content to expand.
        name: expand
        in: query
        schema:
          type: array
          items:
            type: string
          minItems: 1
          uniqueItems: true
        explode: false
        style: form
        required: false
    selectParam:
      description: A comma-separated list indicating which properties of the content to return.
      name: select
      in: query
      schema:
        type: array
        items:
          type: string
        minItems: 1
        uniqueItems: true
      explode: false
      style: form
      required: false
  schemas:
    Account:
      type: object
      required:
        - address
        - balance
        - _expandable
      properties:
        address:
          $ref: '#/components/schemas/Address'
        balance:
          type: string
          format: uint64
        keys:
          type: array
          items:
            $ref: '#/components/schemas/AccountPublicKey'
          minItems: 1
          uniqueItems: true
        contracts:
          type: object
          additionalProperties:
            type: string
            format: byte
        _expandable:
          type: object
          properties:
            keys:
              type: string
            contracts:
              type: string
        _links:
          $ref: '#/components/schemas/Links'
    AccountPublicKey:
      type: object
      required:
        - index
        - public_key
        - signing_algorithm
        - hashing_algorithm
        - sequence_number
        - weight
        - revoked
      properties:
        index:
          type: string
          format: uint64
        public_key:
          type: string
          format: bytes
        signing_algorithm:
          $ref: '#/components/schemas/SigningAlgorithm'
        hashing_algorithm:
          $ref: '#/components/schemas/HashingAlgorithm'
        sequence_number:
          type: string
          format: uint64
        weight:
          type: string
          format: uint64
        revoked:
          type: boolean
    SigningAlgorithm:
      type: string
      enum:
        - BLSBLS12381
        - ECDSAP256
        - ECDSASecp256k1
    HashingAlgorithm:
      type: string
      enum:
        - SHA2_256
        - SHA2_384
        - SHA3_256
        - SHA3_384
        - KMAC128
    Collection:
      type: object
      required:
        - id
        - _expandable
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        _expandable:
          type: object
          properties:
            transactions:
              type: array
              items:
                type: string
                format: uri
        _links:
          $ref: '#/components/schemas/Links'
    Transaction:
      type: object
      required:
        - id
        - script
        - arguments
        - reference_block_id
        - gas_limit
        - payer
        - proposal_key
        - authorizers
        - payload_signatures
        - envelope_signatures
        - _expandable
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        script:
          type: string
          format: byte
        arguments:
          type: array
          items:
            type: string
            format: byte
        reference_block_id:
          $ref: '#/components/schemas/Identifier'
        gas_limit:
          type: string
          format: uint64
        payer:
          $ref: '#/components/schemas/Address'
        proposal_key:
          $ref: '#/components/schemas/ProposalKey'
        authorizers:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        payload_signatures:
          type: array
          items:
            $ref: '#/components/schemas/TransactionSignature'
        envelope_signatures:
          type: array
          items:
            $ref: '#/components/schemas/TransactionSignature'
        result:
          $ref: '#/components/schemas/TransactionResult'
        _expandable:
          type: object
          properties:
            result:
              type: string
              format: uri
        _links:
          $ref: '#/components/schemas/Links'
    ProposalKey:
      type: object
      required:
        - address
        - key_index
        - sequence_number
      properties:
        address:
          $ref: '#/components/schemas/Address'
        key_index:
          type: string
          format: uint64
        sequence_number:
          type: string
          format: uint64
    TransactionSignature:
      type: object
      required:
        - address
        - signer_index
        - key_index
        - signature
      properties:
        address:
          $ref: '#/components/schemas/Address'
        signer_index:
          type: string
          format: uint64
        key_index:
          type: string
          format: uint64
        signature:
          $ref: '#/components/schemas/Signature'
    TransactionResult:
      type: object
      required:
        - block_id
        - status
        - error_message
        - computation_used
        - events
      properties:
        block_id:
          $ref: '#/components/schemas/Identifier'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        error_message:
          type: string
        computation_used:
          type: string
          format: uint64
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        _links:
          $ref: '#/components/schemas/Links'
    TransactionStatus:
      type: string
      enum: 
       - Pending
       - Finalized
       - Executed
       - Sealed
       - Expired
    Block:
      type: object
      required:
        - header
        - _expandable
      properties:
        header:
          $ref: '#/components/schemas/BlockHeader'
        payload:
          $ref: '#/components/schemas/BlockPayload'
        execution_result:
          $ref: '#/components/schemas/ExecutionResult'
        _expandable:
          type: object
          properties:
            payload:
              type: string
            execution_result:
              type: string
              format: uri
        _links:
          $ref: '#/components/schemas/Links'
    BlockHeader:
      type: object
      required:
        - id
        - parent_id
        - height
        - timestamp
        - parent_voter_signature
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        parent_id:
          $ref: '#/components/schemas/Identifier'
        height:
          type: string
          format: uint64
        timestamp:
          type: string
          format: date-time
        parent_voter_signature:
          $ref: '#/components/schemas/Signature'
    BlockPayload:
      type: object
      required:
        - collection_guarantees
        - block_seals
      properties:
        collection_guarantees:
          type: array
          items:
            $ref: '#/components/schemas/CollectionGuarantee'
          uniqueItems: true
        block_seals:
          type: array
          items:
            $ref: '#/components/schemas/BlockSeal'
          uniqueItems: true
    CollectionGuarantee:
      type: object
      required:
        - collection_id
        - signer_ids
        - signature
      properties:
        collection_id:
          $ref: '#/components/schemas/Identifier'
        signer_ids:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          minItems: 1
          uniqueItems: true
        signature:
          $ref: '#/components/schemas/Signature'
    BlockSeal:
      type: object
      required:
        - block_id
        - result_id
        - final_state
        - aggregated_approval_signatures
      properties:
        block_id:
          $ref: '#/components/schemas/Identifier'
        result_id:
          $ref: '#/components/schemas/Identifier'
        final_state:
          $ref: '#/components/schemas/StateCommitment'
        aggregated_approval_signatures:
          type: array
          items:
            $ref: '#/components/schemas/AggregatedSignature'
          minItems: 1
          uniqueItems: true
    StateCommitment:
      description: The root hash of the state tree.
      type: string
      format: hexadecimal
      pattern: '[a-fA-F0-9]{64}'
    AggregatedSignature:
      type: object
      required:
        - verifier_signatures
        - signer_ids
      properties:
        verifier_signatures:
          type: array
          items:
            $ref: '#/components/schemas/Signature'
          minItems: 1
          uniqueItems: true
        signer_ids:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
          minItems: 1
          uniqueItems: true
    ExecutionResult:
      type: object
      required:
        - id
        - block_id
        - events
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        block_id:
          $ref: '#/components/schemas/Identifier'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        _links:
          $ref: '#/components/schemas/Links'
    Event:
      type: object
      required:
        - type
        - transaction_id
        - transaction_index
        - event_index
        - payload
      properties:
        type:
          $ref: '#/components/schemas/EventType'
        transaction_id:
          $ref: '#/components/schemas/Identifier'
        transaction_index:
          type: string
          format: uint64
        event_index:
          type: string
          format: uint64
        payload:
          type: string
          format: byte
    BlockHeight:
      oneOf:
        - type: string
          format: uint64
        - type: string
          enum:
            - final
            - sealed
    EventType:
      description: The qualified event type.
      type: string
    Address:
      description: The 8-byte address of an account.
      type: string
      format: hexadecimal
      pattern: '[a-fA-F0-9]{16}'
    Identifier:
      description: A 32-byte unique identifier for an entity.
      type: string
      format: hexadecimal
      pattern: '[a-fA-F0-9]{64}'
    Signature:
      description: A variable length signature.
      type: string
      format: byte
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    Links:
      type: object
      properties:
        _self:
          type: string
  responses:
    400BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    404NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    500InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
externalDocs:
  description: "Find out more about the Access API"
  url: "https://docs.onflow.org/access-api/"
